{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAM,YAAY,GAAG,QAAQ,CAAC,aAAT,CAAuB,WAAvB,CAArB;AACA,IAAM,YAAY,GAAG,QAAQ,CAAC,aAAT,CAAuB,SAAvB,CAArB;AACA,IAAM,UAAU,GAAG,QAAQ,CAAC,aAAT,CAAuB,SAAvB,CAAnB;;AAEA,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,IAAD,EAAW;AAC9B,SAAA,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;AAC1B,QAAM,MAAM,GAAG,IAAI,UAAJ,EAAf;AACA,IAAA,MAAM,CAAC,aAAP,CAAqB,IAArB;;AACA,IAAA,MAAM,CAAC,SAAP,GAAmB,YAAA;AACjB,UAAM,kBAAkB,GAAG,MAAM,CAAC,MAAlC;AACA,UAAM,MAAM,GAAG,kBAAkB,CAAC,OAAnB,CAA2B,wBAA3B,EAAqD,EAArD,CAAf;AACA,MAAA,OAAO,CAAC,MAAD,CAAP;AACD,KAJD;;AAKA,IAAA,MAAM,CAAC,OAAP,GAAiB,YAAA;AACf,UAAM,GAAG,GAAG,MAAM,CAAC,MAAnB;AACA,MAAA,MAAM,CAAC,sCAAoC,GAArC,CAAN;AACD,KAHD;AAID,GAZD,CAAA;AAYE,CAbJ;;AAsBA,IAAM,IAAI,GAAG,SAAP,IAAO,CAAO,GAAP,EAAoB,IAApB,EAAgC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAG,OAAH,EAAU,YAAA;;;;;AACpC,iBAAA,CAAA;AAAA;AAAA,YAAM,KAAK,CAAC,GAAD,EAAM;AAChC,YAAA,MAAM,EAAE,MADwB;AAEhC,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFuB;AAKhC,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf;AAL0B,WAAN,CAAX,CAAA;;;AAAX,UAAA,QAAQ,GAAG,EAAA,CAAA,IAAA,EAAX;AAON,iBAAA,CAAA;AAAA;AAAA,YAAO,QAAQ,CAAC,IAAT,EAAP,CAAA;;;GAR2C,CAAA;AAS5C,CATD;;AAWA,YAAY,CAAC,gBAAb,CAA8B,OAA9B,EAAuC,YAAA;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AAC9B,UAAA,IAAI,GAAI,YAAY,CAAC,KAAb,CAAkB,CAAlB,CAAR;AACQ,iBAAA,CAAA;AAAA;AAAA,YAAM,YAAY,CAAC,IAAD,CAAlB,CAAA;;;AAAT,UAAA,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;AACW,iBAAA,CAAA;AAAA;AAAA,YAAM,IAAI,CAAC,aAAD,EAAgB;AAAE,YAAA,MAAM,EAAA;AAAR,WAAhB,CAAV,CAAA;;;AAAX,UAAA,QAAQ,GAAG,EAAA,CAAA,IAAA,EAAX;AACN,UAAA,UAAU,CAAC,SAAX,GAAuB,QAAQ,CAAC,aAAhC;;;;;;GAJqC,CAAA;AAKtC,CALD","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["const wavFileInput = document.querySelector(\"#wav-file\") as HTMLInputElement;\r\nconst submitButton = document.querySelector(\"#submit\") as HTMLButtonElement;\r\nconst resultPara = document.querySelector(\"#result\") as HTMLParagraphElement;\r\n\r\nconst fileToBase64 = (file: File): Promise<string> =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      const base64WithPrefixes = reader.result as string;\r\n      const base64 = base64WithPrefixes.replace(\"data:audio/wav;base64,\", \"\");\r\n      resolve(base64);\r\n    };\r\n    reader.onerror = () => {\r\n      const err = reader.result;\r\n      reject(`Error converting file to base64: ${err}`);\r\n    };\r\n  });\r\n\r\ninterface STTResponse {\r\n  input: {\r\n    base64: string;\r\n  };\r\n  transcription: string;\r\n}\r\n\r\nconst post = async (url: string, data: object): Promise<STTResponse> => {\r\n  const response = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n  return response.json();\r\n};\r\n\r\nsubmitButton.addEventListener(\"click\", async () => {\r\n  const [file] = wavFileInput.files;\r\n  const base64 = await fileToBase64(file);\r\n  const response = await post(\"/stt/base64\", { base64 });\r\n  resultPara.innerText = response.transcription;\r\n});\r\n"]}